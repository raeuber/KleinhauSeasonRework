<?xml version="1.0" encoding="utf-8"?>

<CustomShader version="3">
    <Parameters>
        <Parameter name="wrappingState" target="wrappingState" type="float" defaultValue="0 0 0 0"/>
    </Parameters>
    <Textures>
      <Texture name="wrapDiffuseMap" defaultColorProfile = "sRGB"       />
      <Texture name="wrapNormalMap"  defaultColorProfile = "linearRGB"  />
    </Textures>
    <LodLevel startDistance="0">
        <CodeInjections>
            <CodeInjection position="CONFIG_DEFINES">
<![CDATA[
#undef GLOSS_MAP_ROUGHNESS_CHANNEL
]]>
            </CodeInjection>
            <CodeInjection position="SAMPLERS">
<![CDATA[
#if defined(DIFFUSE)
    sampler2D   wrapDiffuseMap;
    sampler2D   wrapNormalMap;
#endif
]]>
            </CodeInjection>
            <CodeInjection position="MATERIALINFO">
<![CDATA[
    uniform float wrappingState;
]]>
            </CodeInjection>
            <CodeInjection position="FS_GLOBALS">
<![CDATA[
#if defined(DIFFUSE)
    float wrapLerp;
    float4 wrapDiffuse;
#endif
]]>
            </CodeInjection>
            <CodeInjection position="START_FS">
<![CDATA[
#if defined(DIFFUSE)
    float state = wrappingState*(10.5/4);
    if (state > 0) {
        state += 0.25/4;
    }
    state = min(state, 1);

    globals.wrapDiffuse = tex2D(wrapDiffuseMap, In.vs.ALBEDOMAP_TEXCOORD);
    globals.wrapLerp = (globals.wrapDiffuse.w > (1-state));
#endif
]]>
            </CodeInjection>
            <CodeInjection position="GET_UNNORMALIZED_TANGENT_SPACE_NORMAL_FS">
<![CDATA[
#if defined( NORMAL_MAP )
{
    float3 normal1;
    float3 normal2;
    #ifdef NORMAL_MAP_SIGNED_2CHANNEL
        // use BC5 signed format for the normal map
        normal1.xy = tex2D(normalMap, In.vs.NORMALMAP_TEXCOORD).xy;
        normal1.z = sqrt(1.0 - dot(normal1.xy, normal1.xy));
        normal2.xy = tex2D(wrapNormalMap, In.vs.NORMALMAP_TEXCOORD).xy;
        normal2.z = sqrt(1.0 - dot(normal2.xy, normal2.xy));
    #else
        normal1 = tex2D(normalMap, In.vs.NORMALMAP_TEXCOORD).xyz - 0.5;
        normal2 = tex2D(wrapNormalMap, In.vs.NORMALMAP_TEXCOORD).xyz - 0.5;
    #endif
    float3 normal = lerp(normal1, normal2, globals.wrapLerp);
    return normal;
}
#endif
]]>
            </CodeInjection>
            <CodeInjection position = "GET_TANGENT_SPACE_NORMAL_FS">
<![CDATA[
#if defined( NORMAL_MAP )
    return normalize(getUnnormalizedTangentSpaceNormal(In, globals));
#endif
]]>
            </CodeInjection>
            <CodeInjection position="POST_ALBEDO_FS">
<![CDATA[
#if defined(DIFFUSE)
    albedo.xyz = lerp(albedo.xyz, globals.wrapDiffuse.xyz, globals.wrapLerp);
#endif
]]>
            </CodeInjection>
            <CodeInjection position="POST_GLOSS_COLOR_FS">
<![CDATA[
#if defined(SPECULAR) && defined(GLOSS_MAP)
    float3 glossColor1 = tex2D(glossMap, In.vs.GLOSSMAP_TEXCOORD).xyz;
    float3 glossColor2 = globals.wrapDiffuse.xyz*0.3;
    glossColor = lerp(glossColor1, glossColor2, globals.wrapLerp);
#endif
]]>
            </CodeInjection>
        </CodeInjections>
    </LodLevel>
</CustomShader>
